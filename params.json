{"name":"Lotus","tagline":"Full stack web framework for Ruby","body":"# Lotus\r\n\r\n__Lotus is a full stack web framework for Ruby__, built with lightness, performances and testability in mind.\r\nIt aims to bring back Object Oriented Programming to web development, leveraging on stable APIs, a minimal DSL, and plain objects.\r\n\r\n## Standalone frameworks\r\n\r\nIt's composed by __standalone frameworks__ (controllers, views, etc..), each one is shipped as an independent gem, in order to remark the separation of concerns.\r\nThey can be used with any [Rack](http://rack.github.io) compatible application for a specific need: for instance, [Lotus::Router](http://lotusrb.org/router) can be used to dispatch HTTP requests for a pool of [Sinatra](http://www.sinatrarb.com) applications.\r\n\r\n## Full stack application\r\n\r\nThe other way to use Lotus is to build a full stack application with it, like [Rails](http://rubyonrails.org) does.\r\nThe Lotus gem is designed to enhance those frameworks' features with a few specific conventions.\r\n\r\n## Philosophy\r\n\r\nLotus is based on simplicity, less DSLs, few conventions, more objects, zero monkey-patching of the core language and standard lib, separation of concerns for MVC layers.\r\nIt suggests patterns, rather than imposing. It leaves all the freedom to developers to build their own architecture, choose the inheritance structure.\r\nIt simplifies testability, and encourages single, well defined responsibilities between classes.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}